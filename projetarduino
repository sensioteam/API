{"swagger":"2.0","info":{"version":"1.0.0","title":"test"},"basePath":"/api","paths":{"/Users/{id}/accessTokens/{fk}":{"get":{"tags":["User"],"summary":"Find a related item by id for accessTokens.","operationId":"User.prototype.__findById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a related item by id for accessTokens.","operationId":"User.prototype.__destroyById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["User"],"summary":"Update a related item by id for accessTokens.","operationId":"User.prototype.__updateById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false}},"/Users/{id}/accessTokens":{"get":{"tags":["User"],"summary":"Queries accessTokens of User.","operationId":"User.prototype.__get__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessToken"}}}},"deprecated":false},"post":{"tags":["User"],"summary":"Creates a new instance in accessTokens of this model.","operationId":"User.prototype.__create__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Deletes all accessTokens of this model.","operationId":"User.prototype.__delete__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/accessTokens/count":{"get":{"tags":["User"],"summary":"Counts accessTokens of User.","operationId":"User.prototype.__count__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users":{"post":{"tags":["User"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"User.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"User.upsert__put_Users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"User.upsert__patch_Users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"User.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}},"deprecated":false}},"/Users/replaceOrCreate":{"post":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/upsertWithWhere":{"post":{"tags":["User"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"User.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/exists":{"get":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__get_Users_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Users/{id}":{"head":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__head_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"User.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"User.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"User.prototype.updateAttributes__put_Users_{id}","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"User.prototype.updateAttributes__patch_Users_{id}","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/replace":{"post":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/findOne":{"get":{"tags":["User"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"User.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/update":{"post":{"tags":["User"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"User.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Users/count":{"get":{"tags":["User"],"summary":"Count instances of the model matched by where from the data source.","operationId":"User.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users/change-stream":{"post":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__post_Users_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__get_Users_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Users/login":{"post":{"tags":["User"],"summary":"Login a user with username/email and password.","operationId":"User.login","parameters":[{"name":"credentials","in":"body","required":true,"schema":{"type":"object"}},{"name":"include","in":"query","description":"Related objects to include in the response. See the description of return value for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Le corps de réponse contient les propriétés de AccessToken créées lors de la connexion.\nEn fonction de la valeur du paramètre `include`, le corps peut contenir des propriétés supplémentaires :\n\n  - `user` - `U+007BUserU+007D` - Données de l'utilisateur connecté. (`include=user`)\n\n","type":"object"}}},"deprecated":false}},"/Users/logout":{"post":{"tags":["User"],"summary":"Logout a user with access token.","operationId":"User.logout","parameters":[],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/confirm":{"get":{"tags":["User"],"summary":"Confirm a user registration with email verification token.","operationId":"User.confirm","parameters":[{"name":"uid","in":"query","required":true,"type":"string"},{"name":"token","in":"query","required":true,"type":"string"},{"name":"redirect","in":"query","required":false,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/reset":{"post":{"tags":["User"],"summary":"Reset password for a user with email.","operationId":"User.resetPassword","parameters":[{"name":"options","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Data":{"post":{"tags":["Data"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Data.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Data"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false},"put":{"tags":["Data"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Data.upsert__put_Data","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Data"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false},"patch":{"tags":["Data"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Data.upsert__patch_Data","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Data"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false},"get":{"tags":["Data"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Data.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Data"}}}},"deprecated":false}},"/Data/replaceOrCreate":{"post":{"tags":["Data"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Data.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Data"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false}},"/Data/upsertWithWhere":{"post":{"tags":["Data"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Data.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Data"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false}},"/Data/{id}/exists":{"get":{"tags":["Data"],"summary":"Check whether a model instance exists in the data source.","operationId":"Data.exists__get_Data_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Data/{id}":{"head":{"tags":["Data"],"summary":"Check whether a model instance exists in the data source.","operationId":"Data.exists__head_Data_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Data"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Data.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false},"delete":{"tags":["Data"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Data.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Data"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Data.prototype.updateAttributes__put_Data_{id}","parameters":[{"name":"id","in":"path","description":"Data id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Data"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false},"patch":{"tags":["Data"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Data.prototype.updateAttributes__patch_Data_{id}","parameters":[{"name":"id","in":"path","description":"Data id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Data"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false}},"/Data/{id}/replace":{"post":{"tags":["Data"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Data.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Data"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false}},"/Data/findOne":{"get":{"tags":["Data"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Data.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Data"}}},"deprecated":false}},"/Data/update":{"post":{"tags":["Data"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Data.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Data"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Data/count":{"get":{"tags":["Data"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Data.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Data/change-stream":{"post":{"tags":["Data"],"summary":"Create a change stream.","operationId":"Data.createChangeStream__post_Data_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Data"],"summary":"Create a change stream.","operationId":"Data.createChangeStream__get_Data_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Utilisateurs/{id}/accessTokens/{fk}":{"get":{"tags":["Utilisateur"],"summary":"Find a related item by id for accessTokens.","operationId":"Utilisateur.prototype.__findById__accessTokens","parameters":[{"name":"id","in":"path","description":"Utilisateur id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["Utilisateur"],"summary":"Delete a related item by id for accessTokens.","operationId":"Utilisateur.prototype.__destroyById__accessTokens","parameters":[{"name":"id","in":"path","description":"Utilisateur id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Utilisateur"],"summary":"Update a related item by id for accessTokens.","operationId":"Utilisateur.prototype.__updateById__accessTokens","parameters":[{"name":"id","in":"path","description":"Utilisateur id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false}},"/Utilisateurs/{id}/accessTokens":{"get":{"tags":["Utilisateur"],"summary":"Queries accessTokens of Utilisateur.","operationId":"Utilisateur.prototype.__get__accessTokens","parameters":[{"name":"id","in":"path","description":"Utilisateur id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessToken"}}}},"deprecated":false},"post":{"tags":["Utilisateur"],"summary":"Creates a new instance in accessTokens of this model.","operationId":"Utilisateur.prototype.__create__accessTokens","parameters":[{"name":"id","in":"path","description":"Utilisateur id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["Utilisateur"],"summary":"Deletes all accessTokens of this model.","operationId":"Utilisateur.prototype.__delete__accessTokens","parameters":[{"name":"id","in":"path","description":"Utilisateur id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Utilisateurs/{id}/accessTokens/count":{"get":{"tags":["Utilisateur"],"summary":"Counts accessTokens of Utilisateur.","operationId":"Utilisateur.prototype.__count__accessTokens","parameters":[{"name":"id","in":"path","description":"Utilisateur id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Utilisateurs":{"post":{"tags":["Utilisateur"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Utilisateur.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Utilisateur"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false},"put":{"tags":["Utilisateur"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Utilisateur.upsert__put_Utilisateurs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Utilisateur"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false},"patch":{"tags":["Utilisateur"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Utilisateur.upsert__patch_Utilisateurs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Utilisateur"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false},"get":{"tags":["Utilisateur"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Utilisateur.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Utilisateur"}}}},"deprecated":false}},"/Utilisateurs/replaceOrCreate":{"post":{"tags":["Utilisateur"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Utilisateur.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Utilisateur"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false}},"/Utilisateurs/upsertWithWhere":{"post":{"tags":["Utilisateur"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Utilisateur.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Utilisateur"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false}},"/Utilisateurs/{id}/exists":{"get":{"tags":["Utilisateur"],"summary":"Check whether a model instance exists in the data source.","operationId":"Utilisateur.exists__get_Utilisateurs_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Utilisateurs/{id}":{"head":{"tags":["Utilisateur"],"summary":"Check whether a model instance exists in the data source.","operationId":"Utilisateur.exists__head_Utilisateurs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Utilisateur"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Utilisateur.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false},"delete":{"tags":["Utilisateur"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Utilisateur.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Utilisateur"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Utilisateur.prototype.updateAttributes__put_Utilisateurs_{id}","parameters":[{"name":"id","in":"path","description":"Utilisateur id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Utilisateur"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false},"patch":{"tags":["Utilisateur"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Utilisateur.prototype.updateAttributes__patch_Utilisateurs_{id}","parameters":[{"name":"id","in":"path","description":"Utilisateur id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Utilisateur"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false}},"/Utilisateurs/{id}/replace":{"post":{"tags":["Utilisateur"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Utilisateur.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Utilisateur"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false}},"/Utilisateurs/findOne":{"get":{"tags":["Utilisateur"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Utilisateur.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Utilisateur"}}},"deprecated":false}},"/Utilisateurs/update":{"post":{"tags":["Utilisateur"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Utilisateur.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Utilisateur"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Utilisateurs/count":{"get":{"tags":["Utilisateur"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Utilisateur.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Utilisateurs/change-stream":{"post":{"tags":["Utilisateur"],"summary":"Create a change stream.","operationId":"Utilisateur.createChangeStream__post_Utilisateurs_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Utilisateur"],"summary":"Create a change stream.","operationId":"Utilisateur.createChangeStream__get_Utilisateurs_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Utilisateurs/login":{"post":{"tags":["Utilisateur"],"summary":"Login a user with username/email and password.","operationId":"Utilisateur.login","parameters":[{"name":"credentials","in":"body","required":true,"schema":{"type":"object"}},{"name":"include","in":"query","description":"Related objects to include in the response. See the description of return value for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Le corps de réponse contient les propriétés de AccessToken créées lors de la connexion.\nEn fonction de la valeur du paramètre `include`, le corps peut contenir des propriétés supplémentaires :\n\n  - `user` - `U+007BUserU+007D` - Données de l'utilisateur connecté. (`include=user`)\n\n","type":"object"}}},"deprecated":false}},"/Utilisateurs/logout":{"post":{"tags":["Utilisateur"],"summary":"Logout a user with access token.","operationId":"Utilisateur.logout","parameters":[],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Utilisateurs/confirm":{"get":{"tags":["Utilisateur"],"summary":"Confirm a user registration with email verification token.","operationId":"Utilisateur.confirm","parameters":[{"name":"uid","in":"query","required":true,"type":"string"},{"name":"token","in":"query","required":true,"type":"string"},{"name":"redirect","in":"query","required":false,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Utilisateurs/reset":{"post":{"tags":["Utilisateur"],"summary":"Reset password for a user with email.","operationId":"Utilisateur.resetPassword","parameters":[{"name":"options","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}}},"tags":[{"name":"User"},{"name":"Data"},{"name":"Utilisateur"}],"consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"definitions":{"x-any":{"properties":{}},"AccessToken":{"properties":{"id":{"type":"string"},"ttl":{"default":1209600,"description":"time to live in seconds (2 weeks by default)","type":"number","format":"double"},"created":{"type":"string","format":"date-time"},"userId":{"$ref":"#/definitions/ObjectID"}},"required":["id"],"additionalProperties":false},"User":{"properties":{"realm":{"type":"string"},"username":{"type":"string"},"credentials":{"type":"object"},"challenges":{"type":"object"},"email":{"type":"string"},"emailVerified":{"type":"boolean"},"status":{"type":"string"},"created":{"type":"string","format":"date-time"},"lastUpdated":{"type":"string","format":"date-time"},"id":{"type":"number","format":"double"}},"required":["email"],"additionalProperties":false},"Data":{"properties":{"latitude":{"type":"string"},"longitude":{"type":"string"},"id":{"$ref":"#/definitions/ObjectID"}},"required":["latitude","longitude"],"additionalProperties":false},"Utilisateur":{"properties":{"prenom":{"type":"string"},"nom":{"type":"string"},"realm":{"type":"string"},"username":{"type":"string"},"credentials":{"type":"object"},"challenges":{"type":"object"},"email":{"type":"string"},"emailVerified":{"type":"boolean"},"status":{"type":"string"},"created":{"type":"string","format":"date-time"},"lastUpdated":{"type":"string","format":"date-time"},"id":{"$ref":"#/definitions/ObjectID"}},"required":["prenom","nom","email"],"additionalProperties":false},"ObjectID":{"type":"string","pattern":"^[a-fA-F\\d]{24}$"}}}